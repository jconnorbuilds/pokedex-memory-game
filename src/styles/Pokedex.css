@import url('https://fonts.googleapis.com/css2?family=Tomorrow:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');

@property --dex-scale {
  syntax: '<number>';
  inherits: true;
  /* initial-value: 0.8; */
  initial-value: 1.4;
}

:root {
  --dex-width: calc(250px * var(--dex-scale));
  --dex-height: calc(var(--dex-width) * 2);
  --dex-body-thickness: calc(var(--dex-width) / 12); /* default 25px */
  --dex-lid-thickness: calc(var(--dex-body-thickness) * 0.5); /* default 12.5px */
  --dex-color: #aa0044;
  --dex-color-shade: #820034;
  --dex-color-tint: #dd0059;
  /* --dex-scale: 1; */

  transition: --dex-scale 0.5s ease-in-out;
  &:has(.pokedex--open) {
    --dex-scale: 1.4;
    /* --dex-scale: 1; */
  }
}

* {
  padding: 0;
  margin: 0;
}

.pokedex-wrapper {
  padding: 2rem;
  position: relative;
  right: 0;
  transition: 1s ease-in-out;

  &:has(.pokedex--open) {
    transform: translateZ(80px);
  }
}

#pokedex {
  /* If these ratios change, update the slant transform trig formulae. 
  Unable to easily do it programatically since the length units can't be stripped to use in the calc function.
  Maybe a potential workaround: https://css-tip.com/length-to-integer/  */
  --cutout-max-height-decimal: 0.15;
  --cutout-min-height-decimal: 0.075;
  --cutout-max-height-percent: calc(var(--cutout-max-height-decimal) * 100%);
  --cutout-min-height-percent: calc(var(--cutout-min-height-decimal) * 100%);
  --overhang-slant-start-percent: 50%;
  --overhang-slant-finish-percent: 75%;
  --overhang-max-height: calc(var(--dex-height) * var(--cutout-max-height-decimal));
  --overhang-min-height: calc(var(--dex-height) * var(--cutout-min-height-decimal));
  --slant-angle: atan(45 / 75);
  --slant-length: calc((var(--overhang-min-height)) / sin(var(--slant-angle)));

  margin: auto;
  width: calc(var(--dex-width) * 2);
  aspect-ratio: 1/1;
  position: relative;
  right: 0;
  transform-origin: center;
  transition: transform 400ms linear, right 1s ease-in-out;

  &:is(.pokedex--open) {
    /* Not sure why this the magic value to center the pokedex */
    /* right: 500px; */
  }
}

#pokedex,
#pokedex * {
  transform-style: preserve-3d;
}

.pokedex__body {
  height: 100%;
  width: 50%;
}

.pokedex button {
  padding: 0;
}

.gen-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.pokedex-font {
  font-family: 'Tomorrow', sans-serif;
  font-weight: 400;
  font-style: normal;
  font-size: calc(1em * var(--dex-scale));
}

/* -------------------------------
       MAIN FACES and EDGES
--------------------------------*/

.body__main {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
  width: 100%;
}

.body__main > * {
  position: absolute;
}

.body__main .face,
.body__main .vert-edge,
.body__main .horiz-edge {
  position: absolute;
}

.body__main .face {
  background-color: var(--dex-color);
  width: 100%;
  height: 100%;
}

.body__main .vert-edge {
  background-color: var(--dex-color-tint);
  width: var(--dex-body-thickness);
  height: 100%;
}

.body__main .horiz-edge {
  background-color: var(--dex-color-shade);
  width: 100%;
  height: var(--dex-body-thickness);
}

.body__main__front {
  transform: translateZ(calc(var(--dex-body-thickness) / 2));
}

.body__main__back {
  transform: translateZ(calc(var(--dex-body-thickness) / -2)) rotateX(-180deg);
}

.body__main__left {
  transform: translateX(calc(var(--dex-width) / -2)) rotateY(-90deg);
}

.body__main__right {
  transform: translateX(calc(var(--dex-width) / 2)) rotateY(90deg);
}

.body__main__top {
  transform: translateY(calc(var(--dex-height) / -2)) rotateX(90deg);
}

.body__main__bottom {
  transform: translateY(calc(var(--dex-height) / 2)) rotateX(-90deg);
}

/* -------------------------------
          BODY BUTTONS
--------------------------------*/

.body__buttons {
  padding-top: 2rem;
  display: flex;
  justify-content: space-around;
  gap: 15%;
  bottom: 20%;
  width: 100%;
}

.buttons__dpad {
  background-color: #1a1a1a;
  aspect-ratio: 1/1;
  width: 80px;
  clip-path: polygon(
    33.33% 0,
    33.33% 33.33%,
    0 33.33%,
    0 66.67%,
    33.33% 66.67%,
    33.33% 100%,
    66.67% 100%,
    66.67% 66.67%,
    100% 66.67%,
    100% 33.33%,
    66.67% 33.33%,
    66.67% 0
  );
}

.buttons__ab {
  width: 90px;
  position: relative;
}

.buttons__ab .ab {
  position: absolute;
  background-color: #1a1a1a;
  height: 47.5%;
  border-radius: 50%;
  aspect-ratio: 1/1;
  margin: 3px;
}

.ab__a {
  right: 0;
}

.ab__b {
  bottom: 0;
  left: 0;
}

/* -------------------------------
          FRONT OVERHANG
--------------------------------*/

.body__upper-overhang {
  width: 100%;
  height: var(--cutout-max-height-percent);
  display: flex;
  justify-content: center;
  align-items: center;
  transform: translateZ(calc(var(--dex-lid-thickness) / 2));
}

.body__upper-overhang .face,
.body__upper-overhang .vert-edge,
.body__upper-overhang .horiz-edge {
  position: absolute;
}

.body__upper-overhang .face {
  background-color: var(--dex-color);
  background-color: #9f0044;
}

.body__upper-overhang .vert-edge {
  background-color: var(--dex-color-tint);
  width: calc(var(--dex-lid-thickness));
  height: 100%;
}

.body__upper-overhang .horiz-edge {
  background-color: var(--dex-color-shade);
  width: 100%;
  height: calc(var(--dex-lid-thickness));
}

.upper-overhang__front {
  clip-path: polygon(
    0 0,
    100% 0,
    100% 50%,
    var(--overhang-slant-finish-percent) 50%,
    var(--overhang-slant-start-percent) 100%,
    0 100%
  );
  transform: translateZ(calc(var(--dex-lid-thickness) / 2));
}

.upper-overhang__left {
  transform: translateX(calc(var(--dex-width) * -0.5)) rotateY(-90deg);
}

.body__upper-overhang .upper-overhang__right {
  height: 50%;
  top: 0;
  transform: translateX(calc(var(--dex-width) * 0.5)) rotateY(90deg);
}

.upper-overhang__top {
  transform: translateY(calc(var(--dex-height) * -0.075)) rotateX(-90deg);
}

.upper-overhang__bottom.flat1 {
  width: 50%;
  left: 0;
  transform: translateY(calc(var(--dex-height) * 0.075)) rotateX(-90deg);
}

.upper-overhang__bottom.flat2 {
  width: 25%;
  right: 0;
  transform: rotateX(-90deg);
}

.upper-overhang__bottom.slant1 {
  width: var(--slant-length);
  left: 50%;
  transform-origin: left;
  transform: translateY(calc(var(--dex-height) * 0.075)) rotateX(-90deg)
    rotateY(var(--slant-angle));
}

.upper-overhang__front svg {
  width: calc(var(--dex-height) * 0.15);
  height: 100%;
}

.circle__outer {
  fill: #5a5afb;
}

.circle__inner {
  fill: #1a1acc;
  box-shadow: 3px 3px 10px 3px inset #ffffff;
}

/* ---------------------
      POKEDEX LID
      *left and right are relative to the outer face of the lid
----------------------*/

.pokedex__lid {
  position: absolute;
  top: 0;
  width: 50%;
  height: 100%;
  margin-top: auto;
  transform-origin: 100% 0 calc(var(--dex-lid-thickness) * -0.5);
  transform: translateZ(
      calc((var(--dex-body-thickness) * 0.5 + var(--dex-lid-thickness) * 0.5))
    )
    rotateY(0);
  /* transition: transform 0.5s linear; */
}

.pokedex--open .pokedex__lid {
  animation: open-dex 0.75s ease-out forwards;
}

@keyframes open-dex {
  100% {
    transform: translateZ(calc(var(--dex-body-thickness) - var(--dex-lid-thickness)))
      rotateY(180deg);
  }
}

.lid__main {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
  width: 100%;
}

.lid__main .face,
.lid__main .vert-edge,
.lid__main .horiz-edge {
  position: absolute;
}

.lid__main .face {
  background-color: var(--dex-color);
  background-color: #9f0044;
  width: 100%;
  height: 100%;
}

.lid__main .vert-edge {
  background-color: var(--dex-color-tint);
  width: var(--dex-lid-thickness);
}

.lid__main .horiz-edge {
  background-color: var(--dex-color-shade);

  height: var(--dex-lid-thickness);
}

.lid__main__outside {
  clip-path: polygon(
    0 var(--cutout-max-height-percent),
    var(--overhang-slant-start-percent) var(--cutout-max-height-percent),
    var(--overhang-slant-finish-percent) var(--cutout-min-height-percent),
    100% var(--cutout-min-height-percent),
    100% 100%,
    0 100%
  );
  transform: translateZ(calc(var(--dex-lid-thickness) / 2));
}

.lid__main__inside {
  clip-path: polygon(
    0 var(--cutout-min-height-percent),
    calc(100% - var(--overhang-slant-finish-percent)) var(--cutout-min-height-percent),
    var(--overhang-slant-start-percent) var(--cutout-max-height-percent),
    100% var(--cutout-max-height-percent),
    100% 100%,
    0 100%
  );
  transform: translateZ(calc(var(--dex-lid-thickness) / -2)) rotateY(-180deg);
}

.lid__main__right {
  height: 92.5%;
  bottom: 0;
  transform: translateX(calc(var(--dex-width) / 2)) rotateY(-90deg);
}

.lid__main__left {
  height: 85%;
  bottom: 0;
  transform: translateX(calc(var(--dex-width) / -2)) rotateY(90deg);
}

.lid__main__top.flat1 {
  width: 25%;
  right: 0;
  transform: translateY(calc((var(--dex-height) / -2) + var(--dex-height) * 0.075))
    rotateX(90deg);
}

.lid__main__top.flat2 {
  width: 50%;
  left: 0;
  transform: translateY(calc((var(--dex-height) / -2) + var(--dex-height) * 0.15))
    rotateX(90deg);
}

.lid__main__top.slant1 {
  width: var(--slant-length);
  left: 50%;
  transform-origin: left;
  transform: translateY(calc((var(--dex-height) / -2) + var(--dex-height) * 0.15))
    rotateX(-90deg) rotateY(var(--slant-angle));
}

.lid__main__bottom {
  width: 100%;
  transform: translateY(calc(var(--dex-height) / 2)) rotateX(-90deg);
}

/* ---------------------
      LID CONTENT
----------------------*/

.lid__main__inside {
  display: flex;
  align-items: end;
  padding: 0.75rem;
}

.lid__menu-area {
  height: auto;
  display: grid;
  column-gap: 1em;
  grid-auto-flow: column;
  grid-template-columns: 60% 1fr;
  grid-template-rows: auto 1fr;
}

.lid__menu-area > div {
  display: grid;
  border-radius: 3px;
  overflow: hidden;
  border: 1px solid 222233;
  border-bottom: none;
}

.lid__menu-area h2 {
  font-size: 1em;
  color: #1a1a1a;
}

.lid__menu-area button {
  transition: color 0.25s;
  color: #1a1a1a;
  border-radius: 0;
  border: none;
  border-bottom: 1px solid #222233;
  text-align: center;
  font-weight: 500;
  background-color: #1a1a1a;
  background-color: #ccc;

  font-size: 1rem;
  padding-inline: 0.3rem;
  transition: color 0.2s ease-in-out, text-shadow 0.2s ease-in-out;

  &:hover,
  &:focus,
  &:focus-visible {
    color: #009a5a;
    text-shadow: 1px 1px 8px #77d5;
    outline: none;
  }
}

.lid__menu-area button.lid__button--selected {
  background-color: #2a2a2a;
  background-color: #eaeaea;
}

.lid__gen-buttons {
  grid-template-columns: repeat(5, 1fr);
  grid-template-rows: repeat(2, 1fr);
}

.lid__difficulty-buttons {
  grid-template-columns: 1fr;
  grid-template-rows: repeat(3, 1fr);

  & button {
    text-align: end;
    font-size: 0.7rem;
  }
}

.lid__main-content-wrapper {
  box-sizing: content-box;
  padding-top: 15%;
  height: 85%;
  width: 100%;
}

.lid__main-content {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding: 0.75rem;
  height: 100%;
  border: 2px solid var(--dex-color-shade);
  border-radius: 3px;
  font-size: calc(1em * var(--dex-scale));
}
